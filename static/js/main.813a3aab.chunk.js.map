{"version":3,"sources":["components/EndScreen.tsx","episodes-schema.ts","components/EpisodePlayer.tsx","components/MainMenu.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","outer","position","top","left","right","bottom","background","display","justifyContent","alignItems","title","textAlign","color","margin","EndScreen","classes","className","episodesSchema","scenes","file","videoId","makeChoice","text","fixedContent","player","width","height","overflow","desicionsMenu","flexDirection","zIndex","pausedText","pausedOuter","desicionItem","getVideoSrc","reducer","state","action","type","episode","scene","videoSrc","decisionsMenu","payload","EpisodePlayer","onGameEnded","volume","useState","videoPaused","setVideoPaused","useReducer","dispatch","videoElRef","useRef","onVideoEndHandler","useCallback","length","map","callback","current","play","onVideoClickHandler","videoEl","ended","paused","pause","onVideoDoubleClickHandler","document","fullscreenEnabled","Error","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","err","console","error","useEffect","keyboardListener","e","code","toLowerCase","TypeError","onpause","onplay","window","addEventListener","onfullscreenerror","removeEventListener","onClick","onDoubleClick","autoPlay","src","onEnded","ref","Typography","variant","component","Button","stopPropagation","size","root","padding","fontSize","appTitle","fontStyle","fontWeight","fontFamily","textTransform","textShadow","playLoopButton","menuRoot","borderLeft","menuTitle","marginBottom","menuButton","cursor","transition","textDecoration","paddingLeft","content","paddingRight","verticalAlign","menuFirstButton","animation","DO_NOT_DISPLAY_WARNING","MainMenu","startGameCallback","localStorage","getItem","showWarning","setShowWarning","loopPlaying","setLoopPlaying","closeWarningHanlder","setItem","unmuteLoopHandler","playing","loop","Dialog","open","disableBackdropClick","DialogTitle","DialogContent","DialogActions","startIcon","PlayArrow","process","Grid","container","direction","Array","fill","_","index","classNames","href","volumeSlider","App","currentScreen","setCurrentScreen","appVolume","setAppVolume","muiTheme","useMemo","createMuiTheme","palette","onGameEndCallback","volumeChangeHandler","val","ThemeProvider","theme","CssBaseline","item","VolumeUp","style","marginLeft","Slider","max","step","value","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.813a3aab.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n}\n\nconst useStyles = makeStyles({\n    outer: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: \"black\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    title: {\n        textAlign: \"center\",\n        color: \"lime\",\n        margin: 10\n    }\n});\n\nlet EndScreen: React.FC<Props> = () => {\n    const classes = useStyles();\n\n    return <div className={classes.outer}>\n        <h1 className={classes.title}>Thank You For Playing!</h1>\n    </div>;\n};\n\nexport default EndScreen;","export const episodesSchema = [\n    {\n        title: \"Начало. Домашнее пробуждение.\",\n        scenes: [\n            {\n                file: \"1/1.mp4\",\n                videoId: \"12ttDGSpxdWF7zsqadB3hPTlUp9-v6Z56\"\n            },\n            {\n                makeChoice: [\n                    {\n                        text: \"Сесть за комп\",\n                        file: \"1/2-1.mp4\",\n                        videoId: \"1KDjB_VI-A3PckKOOGe51GwLnvrIBVjpU\"\n                    },\n                    {\n                        text: \"Включить телек\",\n                        file: \"1/2-2.mp4\",\n                        videoId: \"1ykOceSFoXxxUErTN3SSv4ySuqAlFBDeh\"\n                    },\n                    {\n                        text: \"Закинуться еще\",\n                        file: \"1/2-3.mp4\",\n                        videoId: \"1k0Ux3aZpbhABMADvSpF3clfRgImVOC6M\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        title: \"Развитие. Возвращение на улицу.\",\n        scenes: [\n            {\n                file: \"2/1.mp4\",\n                videoId: \"1mFqU6zoJjdha-eLc62NYNXOEMoYAigmi\"\n            },\n            {\n                makeChoice: [\n                    {\n                        text: \"Пойти пешком по лестнице\",\n                        file: \"2/2-1.mp4\",\n                        videoId: \"1MkSoCWs3I3s5B-h2-0TTmj8XZ4eg6Vqd\"\n                    },\n                    {\n                        text: \"Поехать на лифте\",\n                        file: \"2/2-2.mp4\",\n                        videoId: \"1LlqTPu-hYR3gTsfd7wnYOC-_Two7xF69\"\n                    }\n                ]\n            },\n            {\n                file: \"2/3.mp4\",\n                videoId: \"1uoLSsAjybgWtpIDNNIEFK0KCnl4W806F\"\n            },\n            {\n                makeChoice: [\n                    {\n                        text: \"Лада\",\n                        file: \"2/4.mp4\",\n                        videoId: \"1cv5uIEr-M0QiPd2Zwx1SEj8AKpXEiCRv\"\n                    },\n                    {\n                        text: \"Ауди\",\n                        file: \"2/4.mp4\",\n                        videoId: \"1cv5uIEr-M0QiPd2Zwx1SEj8AKpXEiCRv\"\n                    }\n                ]\n            }\n        ]\n    }\n];\n","import React, { useCallback, useEffect, useReducer, useRef, useState } from \"react\";\n\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\n\nimport { episodesSchema } from \"../episodes-schema\";\n\ninterface Props {\n    onGameEnded: () => unknown;\n    volume: number;\n}\n\nconst fixedContent = {\n    position: \"fixed\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n};\n\nconst useStyles = makeStyles({\n    outer: {\n        ...fixedContent as any,\n        background: \"black\"\n    },\n    player: {\n        ...fixedContent as any,\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\"\n    },\n    desicionsMenu: {\n        ...fixedContent as any,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        zIndex: 15\n    },\n    pausedText: {\n        zIndex: 10,\n        background: \"rgba(0, 0, 0, 50%)\"\n    },\n    pausedOuter: {\n        ...fixedContent as any,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n    },\n    desicionItem: {\n        width: 300\n    }\n});\n\ninterface State {\n    episode: number,\n    scene: number,\n    videoSrc: string,\n    decisionsMenu: null | {\n        text: string,\n        callback: () => unknown;\n    }[];\n}\n\ntype Action = {\n    type: \"nextScene\" | \"nextEpisode\" | \"resetState\";\n} | {\n    type: \"setVideoIdToPlay\",\n    payload: string;\n} | {\n    type: \"setDecisionsMenu\",\n    payload: State[\"decisionsMenu\"];\n};\n\nconst getVideoSrc = (videoId: string): string => `https://drive.google.com/uc?export=download&id=${videoId}`;\nconst reducer = (state: State, action: Action): State => {\n\n    switch (action.type) {\n        case \"resetState\":\n            return { episode: 0, scene: 0, videoSrc: getVideoSrc(episodesSchema[0].scenes[0].videoId!), decisionsMenu: null };\n        case \"nextScene\":\n            return { ...state, scene: state.scene + 1 };\n        case \"nextEpisode\":\n            return { ...state, episode: state.episode + 1, scene: 0 };\n        case \"setVideoIdToPlay\":\n            return { ...state, decisionsMenu: null, videoSrc: getVideoSrc(action.payload) };\n        case \"setDecisionsMenu\":\n            return { ...state, decisionsMenu: action.payload };\n        default:\n            //todo never\n            return state;\n    }\n};\n\nlet EpisodePlayer: React.FC<Props> = ({ onGameEnded, volume }) => {\n    const classes = useStyles();\n\n    //STATE\n    const [videoPaused, setVideoPaused] = useState(false);\n    const [state, dispatch] = useReducer(reducer, {\n        episode: 0, scene: 0, videoSrc: getVideoSrc(episodesSchema[0].scenes[0].videoId!), decisionsMenu: null\n    });\n\n    //REF\n    const videoElRef = useRef(null as null | HTMLVideoElement);\n\n    // //CALBACKS\n    const onVideoEndHandler = useCallback(() => {\n        let { episode, scene } = state;\n        const episodeScenes = episodesSchema[state.episode].scenes;\n        if (scene + 1 >= episodeScenes.length) {\n            // if episode has ended\n            if (episode + 1 >= episodesSchema.length) {\n                // if all episodes has ended\n                onGameEnded();\n                return;\n            } else {\n                dispatch({\n                    type: \"nextEpisode\"\n                });\n                episode += 1;\n                scene = 0;\n                //CRINGEEEEE\n            }\n        } else {\n            dispatch({\n                type: \"nextScene\"\n            });\n            scene += 1;\n        }\n\n        const { makeChoice, videoId } = episodesSchema[episode].scenes[scene];\n\n\n        if (makeChoice) {\n            dispatch({\n                type: \"setDecisionsMenu\",\n                payload:\n                    makeChoice.map(({ text, videoId }) => ({\n                        text: text,\n                        callback: () => {\n                            dispatch({\n                                type: \"setVideoIdToPlay\",\n                                payload: videoId\n                            });\n                            videoElRef.current!.play();\n                        }\n                    })\n                    )\n            });\n        } else if (videoId) {\n            dispatch({\n                type: \"setVideoIdToPlay\",\n                payload: videoId\n            });\n        }\n    }, [state, onGameEnded]);\n\n    const onVideoClickHandler = useCallback(() => {\n        const { current: videoEl } = videoElRef;\n        if (!videoEl || videoEl.ended) return;\n        videoEl.paused ? videoEl.play() : videoEl.pause();\n    }, []);\n    const onVideoDoubleClickHandler = useCallback(() => {\n        try {\n            if (!document.fullscreenEnabled) throw new Error(\"fullscreen isn't enabled\");\n            if (document.fullscreenElement === null) document.documentElement.requestFullscreen();\n            else document.exitFullscreen();\n        } catch (err) {\n            console.error(err);\n        }\n    }, []);\n\n    //EFFECTS\n    useEffect(() => {\n        const keyboardListener = (e: KeyboardEvent) => {\n            const { current: videoEl } = videoElRef;\n            if (!videoEl || videoEl.ended) return;\n\n            if (e.code.toLowerCase() === \"space\") {\n                videoEl.paused ? videoEl.play() : videoEl.pause();\n            }\n        };\n\n        const { current: videoEl } = videoElRef;\n        if (!videoEl) throw new TypeError(\"video is not defined\");\n        videoEl.onpause = () => !videoEl.ended && setVideoPaused(true);\n        videoEl.onplay = () => setVideoPaused(false);\n\n        window.addEventListener(\"keydown\", keyboardListener);\n        document.onfullscreenerror = () => { };\n\n        return () => {\n            window.removeEventListener(\"keydown\", keyboardListener);\n            document.onfullscreenerror = null;\n        };\n    }, []);\n    useEffect(() => {\n        const { current: videoEl } = videoElRef;\n        if (!videoEl || videoEl.ended) return;\n        videoEl.volume = volume;\n    }, [volume]);\n\n    return <div className={classes.outer} onClick={onVideoClickHandler} onDoubleClick={onVideoDoubleClickHandler}>\n        <video autoPlay className={classes.player} src={state.videoSrc} onEnded={onVideoEndHandler} ref={videoElRef} />\n        {\n            videoPaused && <div className={classes.pausedOuter}>\n                <Typography variant=\"h2\" component=\"h2\" className={classes.pausedText}>PAUSED</Typography>\n            </div>\n        }\n        {\n            state.decisionsMenu &&\n            <div className={classes.desicionsMenu}>\n                {\n                    state.decisionsMenu.map(({ text, callback }) => (\n                        <Button\n                            key={text}\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                callback();\n                            }}\n                            size=\"large\"\n                            color=\"default\"\n                            variant=\"contained\"\n                            className={classes.desicionItem}\n                        >{text}</Button>\n                    ))\n                }\n            </div>\n        }\n    </div>;\n};\n\nexport default EpisodePlayer;\n","import React, { useCallback, useState } from \"react\";\n\nimport classNames from \"classnames\";\nimport ReactHowler from \"react-howler\";\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, makeStyles } from \"@material-ui/core\";\nimport { PlayArrow as PlayArrowIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    root: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: `url(\"/background.gif\") no-repeat bottom right/contain fixed black`,\n        overflow: \"hidden\",\n        padding: `30px 20px`,\n        fontSize: `1.1em`,\n    },\n    appTitle: {\n        fontSize: \"2.5em\",\n        fontStyle: \"italic\",\n        fontWeight: 900,\n        fontFamily: \"Arial, Helvetica, sans-serif\",\n        textTransform: \"uppercase\",\n        textShadow: `0 0 8px currentColor`,\n    },\n    playLoopButton: {\n        position: \"fixed\",\n        top: 5,\n        left: 5\n    },\n\n    menuRoot: {\n        margin: `20px 20px`,\n        padding: `8px 25px`,\n        borderLeft: `1px solid darkgray`,\n        overflow: \"auto\",\n        fontStyle: \"italic\",\n        fontWeight: \"bold\"\n    },\n    menuTitle: {\n        marginBottom: 15,\n        fontSize: \"1.6em\",\n        textShadow: `0 0 10px currentColor`,\n    },\n    menuButton: {\n        fontSize: \"2em\",\n        cursor: \"pointer\",\n        transition: \".05s all\",\n        padding: \"3px\",\n        fontFamily: \"Arial, Helvetica, sans-serif\",\n        color: \"inherit\",\n        textDecoration: \"none\",\n        \"&:hover\": {\n            paddingLeft: \"8px\"\n        },\n        \"&::before\": {\n            content: '\">\"',\n            paddingRight: \"6px\",\n            verticalAlign: \"middle\",\n            color: \"lime\",\n            fontFamily: \"'Courier New', Courier, monospace\",\n            fontSize: \".8em\"\n        }\n    },\n    menuFirstButton: {\n        animation: \"blink 2s infinite\"\n    }\n});\n\ninterface Props {\n    startGameCallback: () => unknown,\n    volume: number;\n}\n\nconst DO_NOT_DISPLAY_WARNING = \"doNotDisplayWarning\";\n\nlet MainMenu: React.FC<Props> = ({ startGameCallback, volume }) => {\n    const classes = useStyles();\n\n    // STATE\n    const [showWarning, setShowWarning] = useState(window.localStorage.getItem(DO_NOT_DISPLAY_WARNING) === null);\n    const [loopPlaying, setLoopPlaying] = useState(false);\n\n    // CALLBACKS\n    const closeWarningHanlder = useCallback(() => {\n        window.localStorage.setItem(DO_NOT_DISPLAY_WARNING, \"true\");\n        // todo use one button\n        setLoopPlaying(true);\n        setShowWarning(false);\n    }, []);\n    const unmuteLoopHandler = useCallback(() => {\n        setLoopPlaying(true);\n    }, []);\n\n    return <div className={classes.root}>\n        <ReactHowler\n            src=\"/MainMenuLoop.mp3\"\n            volume={volume}\n            playing={loopPlaying}\n            loop\n        />\n        {\n            showWarning && <Dialog open={true} disableBackdropClick={true}>\n                <DialogTitle>Hey!</DialogTitle>\n                <DialogContent>\n                    A lot of Russian swearing. Headphones recommended.\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={closeWarningHanlder}>OKAY</Button>\n                </DialogActions>\n            </Dialog>\n        }\n        {\n            !showWarning && !loopPlaying && <Button\n                className={classes.playLoopButton}\n                startIcon={<PlayArrowIcon />}\n                variant=\"outlined\"\n                onClick={unmuteLoopHandler}\n            // TODO place instead of bottom controls\n            >UNMUTE LOOP</Button>\n        }\n        <h1 className={classes.appTitle}>{process.env.REACT_APP_NAME}</h1>\n        <div className={classes.menuRoot}>\n            <div className={classes.menuTitle}>Main Menu</div>\n            <Grid container direction=\"column\">\n                {\n                    new Array(2).fill(null).map((_, index) => {\n                        return <div\n                            key={index}\n                            className={classNames({\n                                [classes.menuButton]: true,\n                                [classes.menuFirstButton]: index === 0\n                            })}\n                            onClick={startGameCallback}\n                        >Start The Game</div>;\n                    })\n                }\n                <a className={classes.menuButton} href={process.env.REACT_APP_GITHUB_LINK}>View on GitHub</a>\n            </Grid>\n        </div>\n    </div>;\n};\n\nexport default MainMenu;\n","import React, { useCallback, useMemo, useState } from \"react\";\n\nimport { createMuiTheme, CssBaseline, Grid, makeStyles, Slider, ThemeProvider } from \"@material-ui/core\";\nimport { VolumeUp as VolumeUpIcon } from \"@material-ui/icons\";\n\nimport EndScreen from \"./components/EndScreen\";\nimport EpisodePlayer from \"./components/EpisodePlayer\";\nimport MainMenu from \"./components/MainMenu\";\n\ninterface Props {\n}\n\nconst useStyles = makeStyles({\n    volumeSlider: {\n        position: \"fixed\",\n        bottom: 5,\n        left: 5,\n        zIndex: 5\n    }\n});\n\nlet App: React.FC<Props> = () => {\n    const classes = useStyles();\n\n    // STATE\n    const [currentScreen, setCurrentScreen] = useState(\"home\" as \"home\" | \"player\" | \"end\");\n    const [appVolume, setAppVolume] = useState(0.7);\n\n    // MUI-THEME\n    const muiTheme = useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                type: \"dark\"\n            }\n        });\n    }, []);\n\n    // CALLBACKS\n    const startGameCallback = useCallback(() => {\n        setCurrentScreen(\"player\");\n    }, []);\n    const onGameEndCallback = useCallback(() => {\n        setCurrentScreen(\"end\");\n    }, []);\n\n    const volumeChangeHandler = useCallback((_, val: number) => setAppVolume(val), []);\n\n    return <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <Grid container className={classes.volumeSlider}>\n            <Grid item>\n                <VolumeUpIcon />\n            </Grid>\n            <Grid item style={{ width: 200, marginLeft: 5 }}>\n                <Slider color=\"secondary\" max={1} step={0.05} value={appVolume} onChange={volumeChangeHandler as any} />\n            </Grid>\n        </Grid>\n        {\n            currentScreen === \"home\" ? <MainMenu startGameCallback={startGameCallback} volume={appVolume} /> :\n                currentScreen === \"end\" ? <EndScreen /> :\n                    currentScreen === \"player\" ? <EpisodePlayer onGameEnded={onGameEndCallback} volume={appVolume} /> :\n                        null\n        }\n    </ThemeProvider>;\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}